cmake_minimum_required(VERSION 3.0)

set(C74_MIN_API_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../min-api)


#############################################################
project(mock_kernel)
#############################################################


include_directories( 
	"${C74_MIN_API_DIR}/max-api/include"
	"."
)


add_definitions(
	-DWIN_VERSION
	-D_USE_MATH_DEFINES
)


set(CMAKE_MACOSX_RPATH 1)


set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../../../../tests")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")

if (WIN32)
	set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)

	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../../../../tests")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")

	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../../../../tests")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
endif ()

add_library( 
	${PROJECT_NAME} 
	SHARED
	c74_mock.cpp
)

#if (WIN32)
#	GENERATE_EXPORT_HEADER( ${PROJECT_NAME}
 #            BASE_NAME ${PROJECT_NAME}
  #           EXPORT_MACRO_NAME ${PROJECT_NAME}.lib
 #            EXPORT_FILE_NAME MyLibrary_Export.h
 #            STATIC_DEFINE MyLibrary_BUILT_AS_STATIC
#	)
#endif ()


set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)

